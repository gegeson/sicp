16:52->17:26
17:31->18:07
本当はGWにやるつもりだったけど、なんとなく5.4に続けて今読み始める
---
5.5.1
---
注意。若干の勘違いがある考察です。5_5_1.2.rktで解消済み
---
(f 84 96)はレジスタを退避させる必要がない。
という話で思ったけど、レジスタを退避させる必要がある場合って逆にどういうのだろう
思い浮かばない。
((lambda (x) (set! x (+ x 1))) y)
これはレジスタyを変化させるけど、退避させる必要があるか？ないよね？
-
いや、違うか、そういう話じゃなさそうだな
fを評価する事それ自体によって何かが起きるかどうかがポイントなのかも
-
いや〜な例だけど
((lambda ()
         (set! z (+ z 1))
         (lambda (y) (+ y 1))))
zはグローバル変数だとして、
こういう演算子なら、
引数を取りつつも評価（外側のラムダの実行）によってレジスタが変化しうるな。
-
(define z 0)
として、
(((lambda ()
          (set! z (+ z 1))
          (lambda (y) (+ y 1)))) z)
という風にこいつにzを渡したとき、
コンパイラではまず演算子が評価され、その上で引数を渡しているということか。
だとすると、やっぱり
一般的には演算子評価時に引数をレジスタに保存する事は必要というわけだな。
納得。次進もう。
