#lang racket
(require sicp)
;8:52->9:06
(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1) (A x (- y 1))))
    ))
;(A 0 n)
;=2*n
(display (A 1 10))
;= (A 0 (A 1 9))
;= (A 0 (A 0 A(1 8))
;= (A 0 (A 0 A(0 (A 1 7)))
;中略
;= (A 0 (A 0 A(0 (A 0 (A 0 (A 0 A(0 A 0 (A 0 1))))))))
;= 2^10 = 1024
;(A 1 n)
;= 2^n
(newline)
(display (A 2 4))
;= (A 1 (A 2 3))
;= (A 1 (A 1 (A 2 2)))
;= (A 1 (A 1 (A 1 (A 2 1))))
;= (A 1 (A 1 (A 1 2)))
;= (A 1 (A 1 4))
;= (A 1 16)
;= 2^16
;(A 2 n)
;=2^(2^(2^2))
(newline)
(define start (runtime))
(display (A 2 10))
(newline)
(display (- (runtime) start))
;=(A 2 (A 3 2))
;=(A 2 (A 2 (A 3 1)))
;=(A 2 (A 2 2))
;=(A 2 4)
;=(2^(2^2))
