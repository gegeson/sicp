;;(561 1105 1729 2465 2821 6601)


(define (expmod base exp m)
  (cond ((= exp 0) 1)
        ((even? exp)
         (remainder (square (expmod base (/ exp 2) m))
                    m))
        (else
         (remainder (* base (expmod base (- exp 1) m))
                    m))))

(define (fermat-test n)
  (define (try-it a)
    (= (expmod a n n) a))
  (try-it (+ 1 (random-integer (- n 1)))
          ))

(define (fast-prime? n times)
  (cond ((= times 0) #t)
        ((fermat-test n) (fast-prime? n (- times 1)))
        (else #f)))

(define (km-test-iter a n)
  (if (< a n)
      (and (= (expmod a n n) a)
           (km-test-iter (+ a 1) n)
           )
      #t
      )
  )
(use slib)
(require 'trace)
;;(trace km-test-iter)
(set! debug:max-count 100)
(print (km-test-iter 1 561))
(print (km-test-iter 1 1105))
(print (km-test-iter 1 1729))
(print (km-test-iter 1 2465))
(print (km-test-iter 1 2821))
(print (km-test-iter 1 6601))
(print (km-test-iter 1 6605))
(print (km-test-iter 1 101203))
